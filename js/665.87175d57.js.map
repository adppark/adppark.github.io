{"version":3,"file":"js/665.87175d57.js","mappings":"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","sources":["webpack://doctor_bot/./src/views/ChatBotPage.vue","webpack://doctor_bot/./src/views/ChatBotPage.vue?3809"],"sourcesContent":["<template>\n  <div class=\"chatbot-container\" @click=\"closeMenuOnOutsideClick\">\n    <div class=\"overlay-menu\" :class=\"{ 'active': isMenuOpen }\" @click.stop>\n      <button class=\"close-menu\" @click=\"toggleMenu\">X</button>\n      <button class=\"new-chat-button\" @click=\"startNewChat\">New Chat</button>\n      <div class=\"chat-history\">\n        <h3>Chat History</h3>\n        <ul>\n          <li v-for=\"chat in chatHistory\" \n              :key=\"chat._id\" \n              @click=\"loadChat(chat)\"\n              class=\"chat-history-item\">\n            {{ formatChatHistory(chat) }}\n          </li>\n        </ul>\n      </div>\n      <div class=\"menu-footer\">\n        <div class=\"user-info\">\n          <div class=\"user-avatar\">{{ userInitials }}</div>\n          <div class=\"user-name\">{{ userName }}</div>\n        </div>\n        <div class=\"settings-container\">\n          <button class=\"settings-button\" @click=\"toggleSettingsMenu\">\n            <font-awesome-icon icon=\"cog\" />\n          </button>\n          <div v-if=\"isSettingsMenuOpen\" class=\"settings-popup\">\n            <div class=\"popup-arrow\"></div>\n            <ul>\n              <li><button @click=\"goToAccountSettings\">Account Settings</button></li>\n              <li><button>Help & Support</button></li>\n              <li><button @click=\"logout\">Logout</button></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"chat-main\">\n      <div class=\"header\">\n        <div class=\"header-left\">\n          <button class=\"menu-button\" @click=\"toggleMenu\"><font-awesome-icon icon=\"bars\" /></button>\n        </div>\n        <div class=\"header-center\">\n          <h2>[의상현] DoctorChat</h2>\n        </div>\n        <div class=\"header-right\"></div>\n      </div>\n\n      <div class=\"chat-window\">\n        <div v-if=\"!currentChat\" class=\"start-chat\">\n          <div class=\"start-chat-content\">\n          <div class=\"circle\"></div>\n          <p>Hello! Nice to see you here!</p>\n          <p>Please press the \"Start chat\" button to begin.</p>\n          <button @click=\"startNewChat\" class=\"start-chat-button\">Start chat</button>\n        </div>\n        </div>\n        <div v-else class=\"chat-messages\" ref=\"chatMessages\">\n          <div v-for=\"message in currentChat.chat_list\" :key=\"message.date\" class=\"message_container\">\n            <div :class=\"['message-header', message.sender]\">\n              <span v-if=\"message.sender === 'bot'\" class=\"message-icon\"></span>\n              <span class=\"message-name\">{{ message.sender === 'user' ? userName : 'DoctorBot' }}</span>\n              <span v-if=\"message.sender === 'user'\" class=\"message-time\">{{ formatTime(message.date) }}</span>\n            </div>\n            <div :class=\"['message', message.sender]\">{{ message.message }}</div>\n          </div>\n          <div v-if=\"isLoading\" class=\"message bot\">\n            <div class=\"message-content loading\">\n              <img :src=\"require('@/assets/loading.gif')\" alt=\"Loading\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"currentChat\" class=\"input-container\">\n        <input \n          type=\"text\" \n          v-model=\"newMessage\" \n          @keyup.enter=\"sendMessage\" \n          placeholder=\"Write a message\" \n          :disabled=\"isLoading\"\n        />\n        <button @click=\"sendMessage\" class=\"btn-send\" :disabled=\"isLoading\">\n          <font-awesome-icon icon=\"paper-plane\" />\n        </button>\n      </div>\n\n      <footer class=\"footer\">\n        <div>DoctorChatbot V1.</div>\n      </footer>\n    </div>\n  </div>\n</template>\n<script>\nimport { ref, computed, onMounted, onUnmounted, nextTick } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { auth } from '@/firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport axios from 'axios';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faBars, faPaperclip, faPaperPlane, faCog } from '@fortawesome/free-solid-svg-icons';\nimport config from '@/config/config';\n\nlibrary.add(faBars, faPaperclip, faPaperPlane, faCog);\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const isChatStarted = ref(false);\n    const isLoading = ref(false);\n    const userName = ref('');\n    const userEmail = ref('');\n    const isMenuOpen = ref(false);\n    const isSettingsMenuOpen = ref(false);\n    const currentChat = ref(null);\n    const chatHistory = ref([]);\n    const newMessage = ref('');\n    const isAuthenticated = ref(false);\n    const chatStartDate = ref(null);\n\n    const userInitials = computed(() => userName.value.charAt(0).toUpperCase() || '');\n\n    let unsubscribe;\n\n    onMounted(() => {\n      unsubscribe = onAuthStateChanged(auth, async (user) => {\n        if (user) {\n          isAuthenticated.value = true;\n          userName.value = user.displayName || 'User';\n          userEmail.value = user.email;\n          \n          // Check if user has a license\n          try {\n            const response = await axios.get(`${config.apiBaseUrl}/api/check-license`, {\n              params: { email: user.email }\n            });\n            if (!response.data.license_number) {\n              // Redirect to account settings if no license\n              router.push('/account-settings');\n            } else {\n              await loadChatHistory();\n            }\n          } catch (error) {\n            console.error(\"Error checking license:\", error);\n            // Handle error (e.g., show error message)\n          }\n        } else {\n          isAuthenticated.value = false;\n          router.push('/login');\n        }\n      });\n    });\n    \n    onUnmounted(() => {\n      if (unsubscribe) unsubscribe();\n    });\n\n    const toggleMenu = () => {\n      isMenuOpen.value = !isMenuOpen.value;\n      if (isMenuOpen.value) {\n        loadChatHistory();\n      }\n    };\n\n    const closeMenuOnOutsideClick = (event) => {\n      if (isMenuOpen.value && !event.target.closest('.overlay-menu') && !event.target.closest('.menu-button')) {\n        isMenuOpen.value = false;\n      }\n    };\n\n    const goToAccountSettings = () => {\n      router.push('/account-settings');\n      isSettingsMenuOpen.value = false;\n      isMenuOpen.value = false;\n    };\n\n    const toggleSettingsMenu = () => {\n      isSettingsMenuOpen.value = !isSettingsMenuOpen.value;\n    };\n\n    const sendMessage = async () => {\n      if (!isAuthenticated.value || newMessage.value.trim() === '' || isLoading.value) {\n        return;\n      }\n\n      if (!chatStartDate.value) {\n        chatStartDate.value = new Date().toISOString();\n      }\n\n      const userMessage = {\n        sender: 'user',\n        date: new Date().toISOString(),\n        message: newMessage.value.trim()\n      };\n      \n      if (!currentChat.value) {\n        currentChat.value = {\n          chat_list: []\n        };\n      }\n      \n      currentChat.value.chat_list.push(userMessage);\n      newMessage.value = '';\n      isLoading.value = true;\n      scrollToBottom();\n\n      try {\n        const response = await axios.post('https://asia-northeast3-profound-keel-395608.cloudfunctions.net/gpt-doctor-v1', {\n          message_user: userMessage.message,\n          session_id: userEmail.value,\n        });\n\n        const botMessage = {\n          sender: 'bot',\n          date: new Date().toISOString(),\n          message: response.data.message_asst\n        };\n        isLoading.value = false;\n        currentChat.value.chat_list.push(botMessage);\n        await saveChatToServer(userMessage, botMessage);\n      } catch (error) {\n\n        isLoading.value = false;\n        console.error(error);\n        \n        const errMessage = {\n          sender: 'bot',\n          date: new Date().toISOString(),\n          message: \"응답 처리 중 오류가 발생했습니다. 다시 시도해주세요.\"\n        };\n        currentChat.value.chat_list.push(errMessage);\n\n        const botMessage = {\n          sender: 'bot',\n          date: new Date().toISOString(),\n          message: error\n        };\n        await saveChatToServer(userMessage, botMessage);\n      } finally {\n        scrollToBottom();\n      }\n    };\n\n    const saveChatToServer = async (userMessage, botMessage) => {\n      try {\n        await axios.put(`${config.apiBaseUrl}/api/update-chat`, {\n          email: userEmail.value,\n          chat_date: chatStartDate.value,\n          chat_list: [userMessage, botMessage]\n        });\n      } catch (error) {\n        console.error(\"Error saving chat to server:\", error);\n      }\n    };\n\n    const startNewChat = () => {\n      if (!isAuthenticated.value) {\n        router.push('/login');\n        return;\n      }\n      currentChat.value = {\n        chat_list: []\n      };\n      chatStartDate.value = null;\n      isMenuOpen.value = false;\n      scrollToBottom();\n    };\n\n    const loadChatHistory = async () => {\n      if (!isAuthenticated.value) return;\n      try {\n        isLoading.value = true;\n        const response = await axios.get(`${config.apiBaseUrl}/api/chat-history`, {\n          params: { email: userEmail.value }\n        });\n        chatHistory.value = response.data;\n      } catch (error) {\n        console.error(\"Error loading chat history:\", error);\n        // You might want to show an error message to the user here\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    const loadChat = (chat) => {\n      console.log(chat)\n      chatStartDate.value = chat.chat_date;\n      currentChat.value = chat;\n      isChatStarted.value = true;\n      isMenuOpen.value = false;\n      scrollToBottom();\n    };\n\n    const logout = async () => {\n      try {\n        await auth.signOut();\n        isAuthenticated.value = false;\n        userName.value = '';\n        userEmail.value = '';\n        isSettingsMenuOpen.value = false;\n        isChatStarted.value = false;\n        currentChat.value = null;\n        router.push('/login');\n      } catch (error) {\n        console.error(\"Logout error:\", error);\n      }\n    };\n\n    const scrollToBottom = () => {\n      nextTick(() => {\n        const element = document.querySelector('.chat-messages');\n        if (element) {\n          element.scrollTop = element.scrollHeight;\n        }\n      });\n    };\n    const formatChatHistory = (chat) => {\n      const firstMessage = chat.chat_list[0]?.message || 'No messages';\n      return `${new Date(chat.chat_date).toLocaleDateString()} - ${firstMessage.substring(0, 30)}...`;\n    }\n\n    const formatTime = (dateString) => {\n      return new Date(dateString).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    };\n\n    return {\n      isChatStarted,\n      isLoading,\n      userName,\n      userEmail,\n      isMenuOpen,\n      isSettingsMenuOpen,\n      currentChat,\n      chatHistory,\n      newMessage,\n      isAuthenticated,\n      userInitials,\n      toggleMenu,\n      toggleSettingsMenu,\n      startNewChat,\n      sendMessage,\n      loadChatHistory,\n      formatChatHistory,\n      loadChat,\n      logout,\n      scrollToBottom,\n      closeMenuOnOutsideClick,\n      goToAccountSettings,\n      formatTime,\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chatbot-container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  max-width: 600px;\n  margin: 0 auto;\n  background-color: #f0f0f0;\n  position: relative;\n  overflow: hidden;\n}\n\n.chat-main {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n.header {\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background-color: #ffffff;\n  border-bottom: 1px solid #E3E3E3;\n  height: 50px;\n  z-index: 10;\n}\n\n@media (max-width: 768px) {\n  .header {\n    height: 30px;\n    padding: 8px;\n  }\n\n  .header h2 {\n    font-size: 1.1em;\n  }\n  .footer {\n    display: none;\n  }\n}\n\n.header-left {\n  flex: 1;\n  display: flex;\n  justify-content: flex-start;\n}\n\n.header-center {\n  flex: 4;\n  display: flex;\n  justify-content: center;\n}\n\n.header-right {\n  flex: 1;\n}\n\n.header h2 {\n  margin: 0;\n  color: #667085;\n  font-size: 1.4em;\n}\n\n.menu-button {\n  font-size: 24px;\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.chat-window {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  background-color: #F6F6F7;\n}\n\n.start-chat {\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  height: 50%;\n  margin-top: 50px;\n}\n\n.start-chat-content {\n  position: relative;\n  background-color: #ffffff;\n  padding: 40px 24px 24px;\n  border-radius: 8px;\n  text-align: center;\n  width: 80%;\n  border: 1px solid #E3E3E3;\n}\n\n.start-chat-content p {\n  color: #667085;\n}\n\n.circle {\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: #003DF5;\n}\n\n.start-chat-content p {\n  margin-bottom: 16px;\n}\n\n.start-chat-button {\n  padding: 12px 24px;\n  background-color: #003DF5;\n  color: #ffffff;\n  font-size: 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 70%;\n  margin-top: 80px;\n}\n\n.chat-messages {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  overflow-y: auto;\n}\n\n.message-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 4px;\n}\n\n.message-header.user {\n  align-self: flex-end;\n}\n\n.message-header.bot {\n  align-self: flex-start;\n}\n\n.message-icon {\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: #003DF5;\n  margin-right: 8px;\n}\n\n.message-name {\n  font-weight: bold;\n  margin-right: 8px;\n}\n\n.message-time {\n  font-size: 12px;\n  color: #888888;\n}\n\n.message_container {\n  display: flex;\n  flex-direction: column;\n}\n\n.message {\n  max-width: 80%;\n  padding: 8px 16px;\n  border-radius: 8px;\n  font-size: 14px;\n}\n\n.message.user {\n  align-self: flex-end;\n  background-color: #003DF5;\n  color: #ffffff;\n}\n\n.message.bot {\n  align-self: flex-start;\n  background-color: #ffffff;\n}\n\n.message-content.loading {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.message-content.loading img {\n  width: 15px;\n  height: 15px;\n}\n\n.input-container {\n  display: flex;\n  align-items: center;\n  padding: 16px;\n  background-color: #ffffff;\n  position: sticky;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n}\n\n.input-container {\n  display: flex;\n  align-items: center;\n  padding: 13px 16px;\n  background-color: #ffffff;\n  border-top: 1px solid #E3E3E3;\n}\n.input-container input {\n  width:100%;\n  height: 100%;\n}\n.input-container input:disabled,\n.btn-send:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.btn-send {\n  padding: 8px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  margin-left: 8px;\n}\n\n\n.footer {\n  padding: 8px 0;\n  width: 100%;\n  text-align: center;\n  background-color: #ffffff;\n  border-top: 1px solid #E3E3E3;\n  color: #667085;\n}\n\n/* Overlay Menu Styles */\n.overlay-menu {\n  position: fixed;\n  top: 0;\n  left: -100%;\n  width: 80%;\n  max-width: 300px;\n  height: 100%;\n  background-color: #333;\n  color: white;\n  transition: left 0.3s ease;\n  z-index: 1000;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.overlay-menu.active {\n  left: 0;\n}\n\n.close-menu {\n  align-self: flex-end;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n}\n\n.start-new-chat {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #003DF5;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.chat-history {\n  margin-top: 20px;\n  flex-grow: 1;\n  overflow-y: auto;\n}\n\n.chat-history h3 {\n  margin-bottom: 10px;\n}\n\n.chat-history ul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.chat-history li {\n  margin-bottom: 10px;\n  padding: 5px;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 5px;\n}\n\n.menu-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: rgba(0, 0, 0, 0.1);\n  margin-top: auto;\n  margin-bottom: 30px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  background-color: #003DF5;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  margin-right: 10px;\n}\n\n.user-name {\n  font-weight: bold;\n}\n\n.settings-button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n}\n\n.settings-container {\n  position: relative;\n}\n\n.settings-popup {\n  position: absolute;\n  bottom: 100%;  /* This ensures the popup appears above the button */\n  right: 0;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  padding: 10px 0;\n  margin-bottom: 10px;\n  min-width: 200px;\n  z-index: 1000;  /* Ensure the popup appears above other elements */\n}\n\n.popup-arrow {\n  position: absolute;\n  bottom: -10px;\n  right: 10px;\n  width: 0;\n  height: 0;\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  border-top: 10px solid white;\n}\n\n.settings-popup ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.settings-popup li {\n  padding: 5px 15px;\n}\n\n.settings-popup button {\n  background: none;\n  border: none;\n  color: #333;\n  cursor: pointer;\n  width: 100%;\n  text-align: left;\n  padding: 5px 0;\n}\n\n.settings-popup button:hover {\n  background-color: #f0f0f0;\n}\n.new-chat-button {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 15px;\n  background-color: #4285F4;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s ease;\n}\n\n.new-chat-button:hover {\n  background-color: #3367D6;\n}\n.chat-history-item {\n  cursor: pointer;\n}\n</style>","import { render } from \"./ChatBotPage.vue?vue&type=template&id=77f6f508&scoped=true\"\nimport script from \"./ChatBotPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatBotPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChatBotPage.vue?vue&type=style&index=0&id=77f6f508&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-77f6f508\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","key","ref","_createElementBlock","onClick","_cache","args","$setup","closeMenuOnOutsideClick","_normalizeClass","isMenuOpen","_withModifiers","toggleMenu","startNewChat","_hoisted_1","_hoisted_2","_Fragment","_renderList","chatHistory","chat","_id","$event","loadChat","formatChatHistory","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","userInitials","_hoisted_7","userName","_hoisted_8","toggleSettingsMenu","_createVNode","_component_font_awesome_icon","icon","isSettingsMenuOpen","_hoisted_9","_hoisted_10","goToAccountSettings","_hoisted_11","logout","_createCommentVNode","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","currentChat","_hoisted_23","chat_list","message","date","sender","_hoisted_24","_hoisted_25","_hoisted_26","formatTime","isLoading","_hoisted_27","_hoisted_28","src","require","alt","_hoisted_29","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_30","type","newMessage","onKeyup","_withKeys","sendMessage","placeholder","disabled","_hoisted_31","_hoisted_32","_hoisted_33","library","add","faBars","faPaperclip","faPaperPlane","faCog","setup","router","useRouter","isChatStarted","userEmail","isAuthenticated","chatStartDate","computed","value","charAt","toUpperCase","unsubscribe","onMounted","onAuthStateChanged","auth","async","user","displayName","email","response","axios","get","config","apiBaseUrl","params","data","license_number","loadChatHistory","push","error","console","onUnmounted","event","target","closest","trim","Date","toISOString","userMessage","scrollToBottom","post","message_user","session_id","botMessage","message_asst","saveChatToServer","errMessage","put","chat_date","log","signOut","nextTick","element","document","querySelector","scrollTop","scrollHeight","firstMessage","toLocaleDateString","substring","dateString","toLocaleTimeString","hour","minute","__exports__","render"],"sourceRoot":""}